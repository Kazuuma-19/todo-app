name: Deploy App to S3 and EC2

on:
  push:
    branches:
      - main  # `main`ブランチにpushしたらこのアクションが実行される

jobs:
  frontend:
    name: Deploy React App to S3
    runs-on: ubuntu-latest  # GitHub Actionsの実行環境（最新のUbuntu）

    defaults:
      run:
        working-directory: frontend  # Reactアプリのルートディレクトリ

    steps:
      - name: Checkout source
        uses: actions/checkout@v4  # リポジトリからコードをクローン

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'  # 使用するNode.jsのバージョン

      - name: Install dependencies
        run: npm install  # 必要な依存パッケージをインストール

      - name: Create .env file
        run: echo "${{ secrets.FRONT_ENV_FILE }}" > .env

      - name: Check .env file exists
        run: ls -la

      - name: Build React app
        run: npm run build  # Reactアプリをビルド

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1  # 東京リージョン

      - name: Deploy to S3
        run: aws s3 sync dist/ s3://todo-app-front/ --delete
        
      - name: Invalidate CloudFront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*" # キャッシュの削除

  backend:
    name: Deploy Spring Boot App to EC2
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Create application.properties
        run: echo "${{ secrets.APP_PROPERTIES_FILE }}" > src/main/resources/application.properties
        working-directory: backend

      - name: Build Spring Boot App
        run: ./gradlew build

      - name: Create .env file
        run: echo "${{ secrets.ENV_FILE }}" > .env
        working-directory: backend

      - name: Copy to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "backend/build/libs/todo-0.0.1-SNAPSHOT.jar,backend/docker-compose.yml,backend/Dockerfile.prod,backend/.env"
          target: "~/todo-app/"

      - name: Restart App on EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/todo-app/backend
            docker compose down
            docker compose up --build -d
